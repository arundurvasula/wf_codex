name: Release

on:
  release:
    types: [published]
  # Allow manual runs to test the build without publishing a GitHub Release
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # Linux native (x86_64, tuned to the runner CPU)
          - os: ubuntu-22.04
            rustflags: "-C target-cpu=native"
            cpu_tag: ""
          # Linux portable high-perf (x86-64-v3)
          - os: ubuntu-22.04
            rustflags: "-C target-cpu=x86-64-v3"
            cpu_tag: "x86-64-v3"
          # macOS Intel (x86_64)
          - os: macos-13
            rustflags: "-C target-cpu=native"
            cpu_tag: ""
          # macOS Apple Silicon (arm64)
          - os: macos-14
            rustflags: "-C target-cpu=native"
            cpu_tag: ""

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt

      - name: Cache cargo build artifacts
        uses: swatinem/rust-cache@v2
        with:
          cache-on-failure: true

      - name: Build release binary
        env:
          RUSTFLAGS: ${{ matrix.rustflags }}
        run: cargo build --release

      - name: Rename and strip binary with OS/arch suffix
        shell: bash
        run: |
          set -euxo pipefail
          BIN_NAME=wf_codex
          case "${{ matrix.os }}" in
            ubuntu-*) PLATFORM=linux ;;
            macos-*)  PLATFORM=macos ;;
            *)        PLATFORM=unknown ;;
          esac
          ARCH=$(uname -m)
          CPU_TAG="${{ matrix.cpu_tag }}"
          if [[ -n "$CPU_TAG" ]]; then
            OUT="${BIN_NAME}-${PLATFORM}-${ARCH}-${CPU_TAG}"
          else
            OUT="${BIN_NAME}-${PLATFORM}-${ARCH}"
          fi
          cp "target/release/${BIN_NAME}" "$OUT"
          # Extra strip as a safety net (profile also strips)
          if [[ "$PLATFORM" == "linux" ]]; then
            strip "$OUT" || true
          elif [[ "$PLATFORM" == "macos" ]]; then
            strip -x "$OUT" || true
          fi

      - name: Upload release asset(s)
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v1
        with:
          files: wf_codex-*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload build artifacts (for testing)
        if: github.event_name != 'release'
        uses: actions/upload-artifact@v4
        with:
          name: wf_codex-${{ matrix.os }}-${{ runner.arch }}${{ matrix.cpu_tag && format('-{0}', matrix.cpu_tag) || '' }}
          path: wf_codex-*
