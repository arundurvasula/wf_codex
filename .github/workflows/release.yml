name: Release

on:
  release:
    types: [published]
  # Allow manual runs to test the build without publishing a GitHub Release
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # Pin runner images to avoid surprise migrations (e.g., macos-latest -> macOS 15).
        # Add additional macOS versions as needed to build for multiple architectures.
        os: [ubuntu-22.04, macos-13]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt

      - name: Cache cargo build artifacts
        uses: swatinem/rust-cache@v2
        with:
          cache-on-failure: true

      - name: Build release binary
        run: cargo build --release

      - name: Rename binary with OS/arch suffix
        shell: bash
        run: |
          set -euxo pipefail
          BIN_NAME=wf_codex
          case "${{ matrix.os }}" in
            ubuntu-*) PLATFORM=linux ;;
            macos-*)  PLATFORM=macos ;;
            *)        PLATFORM=unknown ;;
          esac
          ARCH=$(uname -m)
          mv "target/release/${BIN_NAME}" "${BIN_NAME}-${PLATFORM}-${ARCH}"

      - name: Upload release asset(s)
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v1
        with:
          files: wf_codex-*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload build artifacts (for testing)
        if: github.event_name != 'release'
        uses: actions/upload-artifact@v4
        with:
          name: wf_codex-${{ matrix.os }}-${{ runner.arch }}
          path: wf_codex-*
